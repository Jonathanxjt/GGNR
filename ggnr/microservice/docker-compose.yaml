version: '3.8'

volumes:
  rabbitmq_data:

services:
  attendee:
    build:
      context: .
      dockerfile: dockerfile_attendee
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5003:5003"
    networks:
      - ggnr_ticket
      - ggnr_network

  event:
    build:
      context: .
      dockerfile: dockerfile_event
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5000:5000"
    networks:
      - ggnr_network
      - ggnr_ticket

  payment:
    build:
      context: .
      dockerfile: dockerfile_payment
    restart: always
    env_file:
      - .env
    ports:
      - "5011:5011"

  search:
    build:
      context: .
      dockerfile: dockerfile_search
    restart: always
    env_file:
      - .env
    ports:
      - "5009:5009"
    networks:
      - ggnr_network

  ticket:
    build:
      context: .
      dockerfile: dockerfile_ticket
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5008:5008"
    networks:
      - ggnr_ticket

  user:
    build:
      context: .
      dockerfile: dockerfile_user
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5005:5005"
    networks:
      - ggnr_network

  registration:
    build:
      context: .
      dockerfile: dockerfile_registration
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5006:5006"
    depends_on:
      - event
      - attendee
      - ticket
    networks:
      - ggnr_ticket

  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ggnr_network

  event_management:
    build:
      context: .
      dockerfile: dockerfile_event_management
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5100:5100"
    depends_on:
      - event
      - user
      - search
      - notification
    networks:
      - ggnr_network

  notification:
    build:
      context: .
      dockerfile: dockerfile_notification
    restart: always
    env_file:
      - ggnr.env
    depends_on:
      - rabbitmq
    ports:
      - "5010:5010"
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      exchangename: notification_topic
      exchangetype: topic
    networks:
      - ggnr_network

  notification_log:
    build:
      context: .
      dockerfile: dockerfile_notification_log
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      a_queue_name: Notification_Log
      PYTHONUNBUFFERED: 1
    networks:
      - ggnr_network

  notification_error:
    build:
      context: .
      dockerfile: dockerfile_notification_error
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      e_queue_name: Error
      PYTHONUNBUFFERED: 1
    networks:
      - ggnr_network

  custom_notification:
    build:
      context: .
      dockerfile: dockerfile_custom_notification
    restart: always
    env_file:
      - ggnr.env
    ports:
      - "5200:5200"
    depends_on:
      - attendee
      - user
      - notification
    networks:
      - ggnr_network
      

networks:
  ggnr_network:
    driver: bridge
  ggnr_ticket:
    driver: bridge

